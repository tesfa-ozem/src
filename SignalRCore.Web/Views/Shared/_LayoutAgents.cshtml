<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>
    <!-- Bootstrap CSS -->
    <link href="~/css/bootstrap.css" rel='stylesheet' type='text/css' />
    <!-- Custom CSS -->
    <link href="~/css/style.css" rel='stylesheet' type='text/css' />
    <link href='//fonts.googleapis.com/css?family=Roboto+Condensed:400,300,300italic,400italic,700,700italic' rel='stylesheet'
          type='text/css'>
    <link href="~/css/font-awesome.css" rel="stylesheet">
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <link href="~/lib/datatables/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
    <link href="~/lib/datatables/css/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"
            integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy"
            crossorigin="anonymous"></script>
    <title>@ViewData["Title"] </title>

    <!-- Custom CSS -->
    <!-- font CSS -->
    <link rel="icon" href="favicon.ico" type="image/x-icon">
    <!-- font-awesome icons -->
    <link href="css/font-awesome.css" rel="stylesheet">
    <!-- //font-awesome icons -->
    <!-- chart -->
    <script src="~/js/Chart.js"></script>
    <!-- //chart -->
    <!-- js-->

    <script src="~/js/modernizr.custom.js"></script>
    <!--webfonts-->
    <link href='/fonts.googleapis.com/css?family=Roboto+Condensed:400,300,300italic,400italic,700,700italic' rel='stylesheet'
          type='text/css'>
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" 
          rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" 
          crossorigin="anonymous">
    <!--//webfonts-->
    <!--animate-->
    <link href="~/css/animate.css" rel="stylesheet" type="text/css" media="all">
    <script src="~/js/wow.min.js"></script>
    <script>
        new WOW().init();
    </script>
    <!--//end-animate-->
    <!-- Metis Menu -->
    <script src="~/js/metisMenu.min.js"></script>
    <script src="~/js/custom.js"></script>
    <link href="~/css/custom.css" rel="stylesheet">

</head>
<body class="cbp-spmenu-push">
    <div class="main-content">

        @RenderBody()
    </div>

    <script src="https://unpkg.com/feather-icons"></script>
    <script>
        feather.replace();
    </script>
    <script src="~/js/classie.js"></script>
    <script>
        var menuLeft = document.getElementById('cbp-spmenu-s1'),
            showLeftPush = document.getElementById('showLeftPush'),
            body = document.body;

        showLeftPush.onclick = function () {
            classie.toggle(this, 'active');
            classie.toggle(body, 'cbp-spmenu-push-toright');
            classie.toggle(menuLeft, 'cbp-spmenu-open');
            disableOther('showLeftPush');
        };


        function disableOther(button) {
            if (button !== 'showLeftPush') {
                classie.toggle(showLeftPush, 'disabled');
            }
        }
    </script>
    <!-- Bootstrap Core JavaScript -->
    <script type="text/javascript" src="~/js/bootstrap.min.js"></script>

    <script type="text/javascript" src="~/js/dev-loaders.js"></script>
    <script type="text/javascript" src="~/js/dev-layout-default.js"></script>
    <script type="text/javascript" src="~/js/jquery.marquee.js"></script>

    <!-- candlestick -->
    <script type="text/javascript" src="~/js/jquery.jqcandlestick.min.js"></script>
    <link rel="stylesheet" type="text/css" href="~/css/jqcandlestick.css" />
    <!-- //candlestick -->
    <!--max-plugin-->
    <script type="text/javascript" src="~/js/plugins.js"></script>
    <!--//max-plugin-->
    <!--scrolling js-->
    <script src="~/js/jquery.nicescroll.js"></script>
    <script src="~/js/scripts.js"></script>
    <!--//scrolling js-->
    <!-- real-time-updates -->
    <script language="javascript" type="text/javascript" src="~/js/jquery.flot.js"></script>
    <script type="text/javascript">

        $(function () {

            // We use an inline data source in the example, usually data would
            // be fetched from a server

            var data = [],
                totalPoints = 300;

            function getRandomData() {

                if (data.length > 0)
                    data = data.slice(1);

                // Do a random walk

                while (data.length < totalPoints) {

                    var prev = data.length > 0 ? data[data.length - 1] : 50,
                        y = prev + Math.random() * 10 - 5;

                    if (y < 0) {
                        y = 0;
                    } else if (y > 100) {
                        y = 100;
                    }

                    data.push(y);
                }

                // Zip the generated y values with the x values

                var res = [];
                for (var i = 0; i < data.length; ++i) {
                    res.push([i, data[i]])
                }

                return res;
            }

            // Set up the control widget

            var updateInterval = 30;
            $("#updateInterval").val(updateInterval).change(function () {
                var v = $(this).val();
                if (v && !isNaN(+v)) {
                    updateInterval = +v;
                    if (updateInterval < 1) {
                        updateInterval = 1;
                    } else if (updateInterval > 2000) {
                        updateInterval = 2000;
                    }
                    $(this).val("" + updateInterval);
                }
            });

            var plot = $.plot("#placeholder", [getRandomData()], {
                series: {
                    shadowSize: 0	// Drawing is faster without shadows
                },
                yaxis: {
                    min: 0,
                    max: 100
                },
                xaxis: {
                    show: false
                }
            });

            function update() {

                plot.setData([getRandomData()]);

                // Since the axes don't change, we don't need to call plot.setupGrid()

                plot.draw();
                setTimeout(update, updateInterval);
            }

            update();

            // Add the Flot version string to the footer

            $("#footer").prepend("Flot " + $.plot.version + " &ndash; ");
        });

    </script>
    <!-- //real-time-updates -->
    <!-- error-graph -->
    <script language="javascript" type="text/javascript" src="~/js/jquery.flot.errorbars.js"></script>
    <script language="javascript" type="text/javascript" src="~/js/jquery.flot.navigate.js"></script>
    <script type="text/javascript">
        $(function () {

            function drawArrow(ctx, x, y, radius) {
                ctx.beginPath();
                ctx.moveTo(x + radius, y + radius);
                ctx.lineTo(x, y);
                ctx.lineTo(x - radius, y + radius);
                ctx.stroke();
            }

            function drawSemiCircle(ctx, x, y, radius) {
                ctx.beginPath();
                ctx.arc(x, y, radius, 0, Math.PI, false);
                ctx.moveTo(x - radius, y);
                ctx.lineTo(x + radius, y);
                ctx.stroke();
            }

            var data1 = [
                [1, 1, .5, .1, .3],
                [2, 2, .3, .5, .2],
                [3, 3, .9, .5, .2],
                [1.5, -.05, .5, .1, .3],
                [3.15, 1., .5, .1, .3],
                [2.5, -1., .5, .1, .3]
            ];

            var data1_points = {
                show: true,
                radius: 5,
                fillColor: "blue",
                errorbars: "xy",
                xerr: { show: true, asymmetric: true, upperCap: "-", lowerCap: "-" },
                yerr: { show: true, color: "red", upperCap: "-" }
            };

            var data2 = [
                [.7, 3, .2, .4],
                [1.5, 2.2, .3, .4],
                [2.3, 1, .5, .2]
            ];

            var data2_points = {
                show: true,
                radius: 5,
                errorbars: "y",
                yerr: { show: true, asymmetric: true, upperCap: drawArrow, lowerCap: drawSemiCircle }
            };

            var data3 = [
                [1, 2, .4],
                [2, 0.5, .3],
                [2.7, 2, .5]
            ];

            var data3_points = {
                //do not show points
                radius: 0,
                errorbars: "y",
                yerr: { show: true, upperCap: "-", lowerCap: "-", radius: 5 }
            };

            var data4 = [
                [1.3, 1],
                [1.75, 2.5],
                [2.5, 0.5]
            ];

            var data4_errors = [0.1, 0.4, 0.2];
            for (var i = 0; i < data4.length; i++) {
                data4_errors[i] = data4[i].concat(data4_errors[i])
            }

            var data = [
                { color: "blue", points: data1_points, data: data1, label: "data1" },
                { color: "red", points: data2_points, data: data2, label: "data2" },
                { color: "green", lines: { show: true }, points: data3_points, data: data3, label: "data3" },
                // bars with errors
                { color: "orange", bars: { show: true, align: "center", barWidth: 0.25 }, data: data4, label: "data4" },
                { color: "orange", points: data3_points, data: data4_errors }
            ];

            $.plot($("#placeholder1"), data, {
                legend: {
                    position: "sw",
                    show: true
                },
                series: {
                    lines: {
                        show: false
                    }
                },
                xaxis: {
                    min: 0.6,
                    max: 3.1
                },
                yaxis: {
                    min: 0,
                    max: 3.5
                },
                zoom: {
                    interactive: true
                },
                pan: {
                    interactive: true
                }
            });

            // Add the Flot version string to the footer

            $("#footer").prepend("Flot " + $.plot.version + " &ndash; ");
        });

    </script>
    <!-- //error-graph -->
    <!-- Skills-graph -->
    <script src="~/js/Chart.Core.js"></script>
    <script src="~/js/Chart.Doughnut.js"></script>
    <script>

        var doughnutData = [
            {
                value: 2,
                label: "One",
                color: "#99CC00"
            },
            {
                value: 3,
                label: "Two",
                color: "#FF3300"
            },
            {
                value: 3,
                label: "Three",
                color: "#944DDB"
            },
            {
                value: 4,
                label: "Four",
                color: "#3399FF"
            },
            {
                value: 5,
                label: "Five",
                color: "#FFC575"
            }

        ];

        window.onload = function () {
            var ctx = document.getElementById("chart-area").getContext("2d");
            window.myDoughnut = new Chart(ctx).Doughnut(doughnutData, { responsive: true });
        };

    </script>
    <!-- //Skills-graph -->
    <!-- status -->
    <script src="~/js/jquery.fn.gantt.js"></script>
    <script>

        $(function () {

            "use strict";

            $(".gantt").gantt({
                source: [{
                    name: "Sprint 0",
                    desc: "Analysis",
                    values: [{
                        from: "/Date(1320192000000)/",
                        to: "/Date(1322401600000)/",
                        label: "Requirement Gathering",
                        customClass: "ganttRed"
                    }]
                }, {
                    name: " ",
                    desc: "Scoping",
                    values: [{
                        from: "/Date(1322611200000)/",
                        to: "/Date(1323302400000)/",
                        label: "Scoping",
                        customClass: "ganttRed"
                    }]
                }, {
                    name: "Sprint 1",
                    desc: "Development",
                    values: [{
                        from: "/Date(1323802400000)/",
                        to: "/Date(1325685200000)/",
                        label: "Development",
                        customClass: "ganttGreen"
                    }]
                }, {
                    name: " ",
                    desc: "Showcasing",
                    values: [{
                        from: "/Date(1325685200000)/",
                        to: "/Date(1325695200000)/",
                        label: "Showcasing",
                        customClass: "ganttBlue"
                    }]
                }, {
                    name: "Sprint 2",
                    desc: "Development",
                    values: [{
                        from: "/Date(1326785200000)/",
                        to: "/Date(1325785200000)/",
                        label: "Development",
                        customClass: "ganttGreen"
                    }]
                }, {
                    name: " ",
                    desc: "Showcasing",
                    values: [{
                        from: "/Date(1328785200000)/",
                        to: "/Date(1328905200000)/",
                        label: "Showcasing",
                        customClass: "ganttBlue"
                    }]
                }, {
                    name: "Release Stage",
                    desc: "Training",
                    values: [{
                        from: "/Date(1330011200000)/",
                        to: "/Date(1336611200000)/",
                        label: "Training",
                        customClass: "ganttOrange"
                    }]
                }, {
                    name: " ",
                    desc: "Deployment",
                    values: [{
                        from: "/Date(1336611200000)/",
                        to: "/Date(1338711200000)/",
                        label: "Deployment",
                        customClass: "ganttOrange"
                    }]
                }, {
                    name: " ",
                    desc: "Warranty Period",
                    values: [{
                        from: "/Date(1336611200000)/",
                        to: "/Date(1349711200000)/",
                        label: "Warranty Period",
                        customClass: "ganttOrange"
                    }]
                }],
                navigate: "scroll",
                scale: "weeks",
                maxScale: "months",
                minScale: "days",
                itemsPerPage: 10,
                onItemClick: function (data) {
                    alert("Item clicked - show some details");
                },
                onAddClick: function (dt, rowId) {
                    alert("Empty space clicked - add an item!");
                },
                onRender: function () {
                    if (window.console && typeof console.log === "function") {
                        console.log("chart rendered");
                    }
                }
            });

            $(".gantt").popover({
                selector: ".bar",
                title: "I'm a popover",
                content: "And I'm the content of said popover.",
                trigger: "hover"
            });

            prettyPrint();

        });

    </script>

    @RenderSection("Scripts", required: false)

</body>
</html>